{"ast":null,"code":"var _jsxFileName = \"/Users/halyna.marchukova/react_pizza/react-pizza-v2/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport qs from 'qs';\nimport { SearchContext } from \"../App\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport Categories from '../components/Categories';\nimport Sort, { list } from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchPizzas } from '../redux/slices/pizzaSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const {\n    items,\n    status\n  } = useSelector(state => state.pizza);\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  const {\n    searchValue\n  } = React.useContext(SearchContext);\n  const onClickCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const onChangePage = page => {\n    dispatch(setCurrentPage(page));\n  };\n  const getPizzas = async () => {\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const sortBy = sort.sortProperty.replace('-', '');\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `&search=${searchValue}` : '';\n    dispatch(fetchPizzas({\n      order,\n      sortBy,\n      category,\n      search,\n      currentPage\n    }));\n  };\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({\n        ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!isSearch.current) {\n      getPizzas();\n    }\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 47\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 67\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onClickCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0423\\u0441\\u0456 \\u043F\\u0456\\u0446\\u0446\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), status === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u041A\\u043E\\u0440\\u0437\\u0438\\u043D\\u0430 \\u043F\\u043E\\u0440\\u043E\\u0436\\u043D\\u044F \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: status === 'loading' ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n};\n_s(Home, \"PfAhxj0GQQuzaxhFBuhK5x3D66w=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","SearchContext","useSelector","useDispatch","setCategoryId","setCurrentPage","setFilters","Categories","Sort","list","PizzaBlock","Skeleton","Pagination","useNavigate","fetchPizzas","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","isSearch","useRef","isMounted","items","status","state","pizza","categoryId","sort","currentPage","filter","searchValue","useContext","onClickCategory","id","onChangePage","page","getPizzas","order","sortProperty","includes","sortBy","replace","category","search","useEffect","window","location","params","parse","substring","find","obj","current","queryString","stringify","pizzas","map","fileName","_jsxFileName","lineNumber","columnNumber","skeletons","Array","_","index","className","children","value","onChangeCategory","_c","$RefreshReg$"],"sources":["/Users/halyna.marchukova/react_pizza/react-pizza-v2/src/pages/Home.jsx"],"sourcesContent":["    import React from 'react'\n\n    import qs from 'qs';\n    import { SearchContext } from \"../App\";\n    import { useSelector, useDispatch } from 'react-redux';\n    import { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\n    import Categories from '../components/Categories';\n    import Sort, { list } from '../components/Sort';\n    import PizzaBlock from '../components/PizzaBlock';\n    import Skeleton from '../components/PizzaBlock/Skeleton'\n    import Pagination from '../components/Pagination';\n    import { useNavigate } from 'react-router-dom';\n    import { fetchPizzas } from '../redux/slices/pizzaSlice';\n\n\n    const Home = () => {\n        const navigate = useNavigate();\n        const dispatch = useDispatch();\n        const isSearch = React.useRef(false);\n        const isMounted = React.useRef(false);\n\n        const {items, status} = useSelector((state) => state.pizza);\n        const {categoryId, sort, currentPage} = useSelector((state) => state.filter);\n        const {searchValue} = React.useContext(SearchContext);\n        const onClickCategory = (id) => {\n            dispatch(setCategoryId(id));\n        };\n\n        const onChangePage = (page) => {\n            dispatch(setCurrentPage(page));\n        };\n\n        const getPizzas = async ()  => {\n        const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n        const sortBy = sort.sortProperty.replace('-', '');\n        const category = categoryId > 0 ? `category=${categoryId}` : '';\n        const search = searchValue ? `&search=${searchValue}` : '';\n        \n        dispatch(\n            fetchPizzas({\n                        order,\n                        sortBy,\n                        category,\n                        search,\n                        currentPage,\n                    })\n                    );\n                };\n\n        React.useEffect(() => {\n            if (window.location.search) {\n                const params = qs.parse(window.location.search.substring(1));\n                const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n\n                dispatch(\n                    setFilters({\n                        ...params,\n                        sort,\n                    }),\n                );\n                isSearch.current = true;\n            }\n        }, []);\n\n        React.useEffect(() => {\n            if (!isSearch.current) {\n                getPizzas();\n            }\n            isSearch.current = false;\n        }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n\n        React.useEffect(() => {\n                if (isMounted.current) {\n                    const queryString = qs.stringify({\n                        sortProperty: sort.sortProperty,\n                        categoryId,\n                        currentPage,\n                    });\n                    navigate(`?${queryString}`);\n                }\n                isMounted.current = true;\n            }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n            const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />)\n            const skeletons = [... new Array(6)].map((_, index)=> <Skeleton key={index} />)\n        return (\n            <div className=\"container\">\n                <div className=\"content__top\">\n                    <Categories value={categoryId} onChangeCategory={onClickCategory}/>\n                    <Sort />\n                </div>\n                <h2 className=\"content__title\">Усі піцци</h2>\n                {\n                    status === 'error' ? <div>\n                        <h2>Корзина порожня </h2>\n                    </div> : <div className=\"content__items\">\n                    {status === 'loading' ? skeletons : pizzas}\n                </div>\n                }\n                \n                <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n            </div>\n        );\n    };\n\n    export default Home;"],"mappings":";;AAAI,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,EAAE,MAAM,IAAI;AACnB,SAASC,aAAa,QAAQ,QAAQ;AACtC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,aAAa,EAAEC,cAAc,EAAEC,UAAU,QAAQ,6BAA6B;AACvF,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,IAAI,IAAIC,IAAI,QAAQ,oBAAoB;AAC/C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzD,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,QAAQ,GAAGjB,WAAW,EAAE;EAC9B,MAAMkB,QAAQ,GAAGtB,KAAK,CAACuB,MAAM,CAAC,KAAK,CAAC;EACpC,MAAMC,SAAS,GAAGxB,KAAK,CAACuB,MAAM,CAAC,KAAK,CAAC;EAErC,MAAM;IAACE,KAAK;IAAEC;EAAM,CAAC,GAAGvB,WAAW,CAAEwB,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EAC3D,MAAM;IAACC,UAAU;IAAEC,IAAI;IAAEC;EAAW,CAAC,GAAG5B,WAAW,CAAEwB,KAAK,IAAKA,KAAK,CAACK,MAAM,CAAC;EAC5E,MAAM;IAACC;EAAW,CAAC,GAAGjC,KAAK,CAACkC,UAAU,CAAChC,aAAa,CAAC;EACrD,MAAMiC,eAAe,GAAIC,EAAE,IAAK;IAC5Bf,QAAQ,CAAChB,aAAa,CAAC+B,EAAE,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC3BjB,QAAQ,CAACf,cAAc,CAACgC,IAAI,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAa;IAC/B,MAAMC,KAAK,GAAGV,IAAI,CAACW,YAAY,CAACC,QAAQ,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,MAAM;IAC9D,MAAMC,MAAM,GAAGb,IAAI,CAACW,YAAY,CAACG,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC;IACjD,MAAMC,QAAQ,GAAGhB,UAAU,GAAG,CAAC,GAAI,YAAWA,UAAW,EAAC,GAAG,EAAE;IAC/D,MAAMiB,MAAM,GAAGb,WAAW,GAAI,WAAUA,WAAY,EAAC,GAAG,EAAE;IAE1DZ,QAAQ,CACJN,WAAW,CAAC;MACAyB,KAAK;MACLG,MAAM;MACNE,QAAQ;MACRC,MAAM;MACNf;IACJ,CAAC,CAAC,CACD;EACL,CAAC;EAET/B,KAAK,CAAC+C,SAAS,CAAC,MAAM;IAClB,IAAIC,MAAM,CAACC,QAAQ,CAACH,MAAM,EAAE;MACxB,MAAMI,MAAM,GAAGjD,EAAE,CAACkD,KAAK,CAACH,MAAM,CAACC,QAAQ,CAACH,MAAM,CAACM,SAAS,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAMtB,IAAI,GAAGpB,IAAI,CAAC2C,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACb,YAAY,KAAKS,MAAM,CAACT,YAAY,CAAC;MAEvEpB,QAAQ,CACJd,UAAU,CAAC;QACP,GAAG2C,MAAM;QACTpB;MACJ,CAAC,CAAC,CACL;MACDR,QAAQ,CAACiC,OAAO,GAAG,IAAI;IAC3B;EACJ,CAAC,EAAE,EAAE,CAAC;EAENvD,KAAK,CAAC+C,SAAS,CAAC,MAAM;IAClB,IAAI,CAACzB,QAAQ,CAACiC,OAAO,EAAE;MACnBhB,SAAS,EAAE;IACf;IACAjB,QAAQ,CAACiC,OAAO,GAAG,KAAK;EAC5B,CAAC,EAAE,CAAC1B,UAAU,EAAEC,IAAI,CAACW,YAAY,EAAER,WAAW,EAAEF,WAAW,CAAC,CAAC;EAG7D/B,KAAK,CAAC+C,SAAS,CAAC,MAAM;IACd,IAAIvB,SAAS,CAAC+B,OAAO,EAAE;MACnB,MAAMC,WAAW,GAAGvD,EAAE,CAACwD,SAAS,CAAC;QAC7BhB,YAAY,EAAEX,IAAI,CAACW,YAAY;QAC/BZ,UAAU;QACVE;MACJ,CAAC,CAAC;MACFX,QAAQ,CAAE,IAAGoC,WAAY,EAAC,CAAC;IAC/B;IACAhC,SAAS,CAAC+B,OAAO,GAAG,IAAI;EAC5B,CAAC,EAAE,CAAC1B,UAAU,EAAEC,IAAI,CAACW,YAAY,EAAER,WAAW,EAAEF,WAAW,CAAC,CAAC;EAE7D,MAAM2B,MAAM,GAAGjC,KAAK,CAACkC,GAAG,CAAEL,GAAG,iBAAKrC,OAAA,CAACN,UAAU;IAAA,GAAkB2C;EAAG,GAAfA,GAAG,CAAClB,EAAE;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAa,CAAC;EACvE,MAAMC,SAAS,GAAG,CAAC,GAAI,IAAIC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACN,GAAG,CAAC,CAACO,CAAC,EAAEC,KAAK,kBAAIlD,OAAA,CAACL,QAAQ,MAAMuD,KAAK;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,CAAC;EACnF,oBACI9C,OAAA;IAAKmD,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBpD,OAAA;MAAKmD,SAAS,EAAC,cAAc;MAAAC,QAAA,gBACzBpD,OAAA,CAACT,UAAU;QAAC8D,KAAK,EAAEzC,UAAW;QAAC0C,gBAAgB,EAAEpC;MAAgB;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACnE9C,OAAA,CAACR,IAAI;QAAAmD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACN,eACN9C,OAAA;MAAImD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAAC;IAAS;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,EAEzCrC,MAAM,KAAK,OAAO,gBAAGT,OAAA;MAAAoD,QAAA,eACjBpD,OAAA;QAAAoD,QAAA,EAAI;MAAgB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAK;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACvB,gBAAG9C,OAAA;MAAKmD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EACvC3C,MAAM,KAAK,SAAS,GAAGsC,SAAS,GAAGN;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC,eAGN9C,OAAA,CAACJ,UAAU;MAACkB,WAAW,EAAEA,WAAY;MAACM,YAAY,EAAEA;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClE;AAEd,CAAC;AAAC5C,EAAA,CAzFID,IAAI;EAAA,QACWJ,WAAW,EACXV,WAAW,EAIJD,WAAW,EACKA,WAAW;AAAA;AAAAqE,EAAA,GAPjDtD,IAAI;AA2FV,eAAeA,IAAI;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}