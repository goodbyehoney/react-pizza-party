{"ast":null,"code":"var _jsxFileName = \"/Users/halyna.marchukova/react_pizza/react-pizza-v2/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport qs from 'qs';\nimport axios from 'axios';\nimport { SearchContext } from \"../App\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport Categories from '../components/Categories';\nimport Sort, { list } from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { useNavigate } from 'react-router-dom';\nimport { setItems, fetchPizzas } from '../redux/slices/pizzaSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const items = useSelector(state => state.pizza.items);\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  const {\n    searchValue\n  } = React.useContext(SearchContext);\n  const [isLoading, setIsLoading] = React.useState(true);\n  const onClickCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const onChangePage = page => {\n    dispatch(setCurrentPage(page));\n  };\n  const fetchPizzas = async () => {\n    setIsLoading(true);\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const sortBy = sort.sortProperty.replace('-', '');\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `&search=${searchValue}` : '';\n    try {\n      dispatch(fetchPizzas({}));\n    } catch (error) {\n      setIsLoading(false);\n      alert('Помилка рендеру піцц');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({\n        ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!isSearch.current) {\n      fetchPizzas();\n    }\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 47\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 67\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onClickCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0423\\u0441\\u0456 \\u043F\\u0456\\u0446\\u0446\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 13\n  }, this);\n};\n_s(Home, \"Vx2meaL39G1AiyBLzey0RHzHiLs=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","axios","SearchContext","useSelector","useDispatch","setCategoryId","setCurrentPage","setFilters","Categories","Sort","list","PizzaBlock","Skeleton","Pagination","useNavigate","setItems","fetchPizzas","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","isSearch","useRef","isMounted","items","state","pizza","categoryId","sort","currentPage","filter","searchValue","useContext","isLoading","setIsLoading","useState","onClickCategory","id","onChangePage","page","order","sortProperty","includes","sortBy","replace","category","search","error","alert","useEffect","window","location","params","parse","substring","find","obj","current","queryString","stringify","pizzas","map","fileName","_jsxFileName","lineNumber","columnNumber","skeletons","Array","_","index","className","children","value","onChangeCategory","_c","$RefreshReg$"],"sources":["/Users/halyna.marchukova/react_pizza/react-pizza-v2/src/pages/Home.jsx"],"sourcesContent":["    import React from 'react'\n\n    import qs from 'qs';\n    import axios from 'axios';\n    import { SearchContext } from \"../App\";\n    import { useSelector, useDispatch } from 'react-redux';\n    import { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\n    import Categories from '../components/Categories';\n    import Sort, { list } from '../components/Sort';\n    import PizzaBlock from '../components/PizzaBlock';\n    import Skeleton from '../components/PizzaBlock/Skeleton'\n    import Pagination from '../components/Pagination';\n    import { useNavigate } from 'react-router-dom';\n    import { setItems, fetchPizzas } from '../redux/slices/pizzaSlice';\n\n\n    export const Home = () => {\n        const navigate = useNavigate();\n        const dispatch = useDispatch();\n        const isSearch = React.useRef(false);\n        const isMounted = React.useRef(false);\n\n        const items = useSelector((state) => state.pizza.items);\n        const {categoryId, sort, currentPage} = useSelector((state) => state.filter);\n    \n        const {searchValue} = React.useContext(SearchContext);\n\n        const [isLoading, setIsLoading] = React.useState(true);\n        \n        const onClickCategory = (id) => {\n            dispatch(setCategoryId(id));\n        };\n\n        const onChangePage = (page) => {\n            dispatch(setCurrentPage(page));\n        };\n\n        const fetchPizzas = async ()  => {\n            setIsLoading(true);\n            const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n            const sortBy = sort.sortProperty.replace('-', '');\n            const category = categoryId > 0 ? `category=${categoryId}` : '';\n            const search = searchValue ? `&search=${searchValue}` : '';\n        \n            try {\n                    dispatch(fetchPizzas({\n                        \n                    }));\n            } catch (error) {\n                    setIsLoading(false);\n                    alert('Помилка рендеру піцц');\n            } finally {\n                setIsLoading(false);\n            }\n            };\n\n        React.useEffect(() => {\n            if (window.location.search) {\n                const params = qs.parse(window.location.search.substring(1));\n                const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n\n                dispatch(\n                    setFilters({\n                        ...params,\n                        sort,\n                    }),\n                );\n                isSearch.current = true;\n            }\n        }, []);\n\n        React.useEffect(() => {\n            if (!isSearch.current) {\n                fetchPizzas();\n            }\n            isSearch.current = false;\n        }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n\n            React.useEffect(() => {\n                if (isMounted.current) {\n                    const queryString = qs.stringify({\n                        sortProperty: sort.sortProperty,\n                        categoryId,\n                        currentPage,\n                    });\n                    navigate(`?${queryString}`);\n                }\n                isMounted.current = true;\n            }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n            const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />)\n            const skeletons = [... new Array(6)].map((_, index)=> <Skeleton key={index} />)\n        return (\n            <div className=\"container\">\n                <div className=\"content__top\">\n                    <Categories value={categoryId} onChangeCategory={onClickCategory}/>\n                    <Sort />\n                </div>\n                <h2 className=\"content__title\">Усі піцци</h2>\n                <div className=\"content__items\">\n                    {\n                    isLoading ? skeletons : pizzas\n                    }\n                </div>\n                <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n            </div>\n        );\n    };\n\n    export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}