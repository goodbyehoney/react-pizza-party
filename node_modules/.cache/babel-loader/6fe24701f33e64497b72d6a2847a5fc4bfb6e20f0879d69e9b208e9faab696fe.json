{"ast":null,"code":"var _jsxFileName = \"/Users/halyna.marchukova/react_pizza/react-pizza-v2/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport qs from 'qs';\nimport axios from 'axios';\nimport { SearchContext } from \"../App\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport Categories from '../components/Categories';\nimport Sort, { list } from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { useNavigate } from 'react-router-dom';\nimport { fetchPizzas } from '../redux/slices/pizzaSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const items = useSelector(state => state.pizza.items);\n  const {\n    categoryId,\n    sort,\n    currentPage\n  } = useSelector(state => state.filter);\n  const {\n    searchValue\n  } = React.useContext(SearchContext);\n  const onClickCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const onChangePage = page => {\n    dispatch(setCurrentPage(page));\n  };\n  const getPizzas = async () => {\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const sortBy = sort.sortProperty.replace('-', '');\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `&search=${searchValue}` : '';\n    try {\n      dispatch(fetchPizzas({\n        order,\n        sortBy,\n        category,\n        search,\n        currentPage\n      }));\n    } catch (error) {\n      setIsLoading(false);\n      alert('Помилка рендеру піцц');\n    }\n  };\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({\n        ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!isSearch.current) {\n      getPizzas();\n    }\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 47\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 67\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onClickCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0423\\u0441\\u0456 \\u043F\\u0456\\u0446\\u0446\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: isLoading ? skeletons : pizzas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 13\n  }, this);\n};\n_s(Home, \"0DQBCqveqHWACd5GlQpwhxByt8g=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","axios","SearchContext","useSelector","useDispatch","setCategoryId","setCurrentPage","setFilters","Categories","Sort","list","PizzaBlock","Skeleton","Pagination","useNavigate","fetchPizzas","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","isSearch","useRef","isMounted","items","state","pizza","categoryId","sort","currentPage","filter","searchValue","useContext","onClickCategory","id","onChangePage","page","getPizzas","order","sortProperty","includes","sortBy","replace","category","search","error","setIsLoading","alert","useEffect","window","location","params","parse","substring","find","obj","current","queryString","stringify","pizzas","map","fileName","_jsxFileName","lineNumber","columnNumber","skeletons","Array","_","index","className","children","value","onChangeCategory","isLoading","_c","$RefreshReg$"],"sources":["/Users/halyna.marchukova/react_pizza/react-pizza-v2/src/pages/Home.jsx"],"sourcesContent":["    import React from 'react'\n\n    import qs from 'qs';\n    import axios from 'axios';\n    import { SearchContext } from \"../App\";\n    import { useSelector, useDispatch } from 'react-redux';\n    import { setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\n    import Categories from '../components/Categories';\n    import Sort, { list } from '../components/Sort';\n    import PizzaBlock from '../components/PizzaBlock';\n    import Skeleton from '../components/PizzaBlock/Skeleton'\n    import Pagination from '../components/Pagination';\n    import { useNavigate } from 'react-router-dom';\n    import { fetchPizzas } from '../redux/slices/pizzaSlice';\n\n\n    export const Home = () => {\n        const navigate = useNavigate();\n        const dispatch = useDispatch();\n        const isSearch = React.useRef(false);\n        const isMounted = React.useRef(false);\n\n        const items = useSelector((state) => state.pizza.items);\n        const {categoryId, sort, currentPage} = useSelector((state) => state.filter);\n    \n        const {searchValue} = React.useContext(SearchContext);\n\n\n        \n        const onClickCategory = (id) => {\n            dispatch(setCategoryId(id));\n        };\n\n        const onChangePage = (page) => {\n            dispatch(setCurrentPage(page));\n        };\n\n        const getPizzas = async ()  => {\n            const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n            const sortBy = sort.sortProperty.replace('-', '');\n            const category = categoryId > 0 ? `category=${categoryId}` : '';\n            const search = searchValue ? `&search=${searchValue}` : '';\n        \n            try {\n                    dispatch(fetchPizzas({\n                        order,\n                        sortBy,\n                        category,\n                        search,\n                        currentPage,\n                    }),\n                    );\n            } catch (error) {\n                    setIsLoading(false);\n                    alert('Помилка рендеру піцц');\n            }\n            };\n\n        React.useEffect(() => {\n            if (window.location.search) {\n                const params = qs.parse(window.location.search.substring(1));\n                const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n\n                dispatch(\n                    setFilters({\n                        ...params,\n                        sort,\n                    }),\n                );\n                isSearch.current = true;\n            }\n        }, []);\n\n        React.useEffect(() => {\n            if (!isSearch.current) {\n                getPizzas();\n            }\n            isSearch.current = false;\n        }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n\n            React.useEffect(() => {\n                if (isMounted.current) {\n                    const queryString = qs.stringify({\n                        sortProperty: sort.sortProperty,\n                        categoryId,\n                        currentPage,\n                    });\n                    navigate(`?${queryString}`);\n                }\n                isMounted.current = true;\n            }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n            const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />)\n            const skeletons = [... new Array(6)].map((_, index)=> <Skeleton key={index} />)\n        return (\n            <div className=\"container\">\n                <div className=\"content__top\">\n                    <Categories value={categoryId} onChangeCategory={onClickCategory}/>\n                    <Sort />\n                </div>\n                <h2 className=\"content__title\">Усі піцци</h2>\n                <div className=\"content__items\">\n                    {\n                    isLoading ? skeletons : pizzas\n                    }\n                </div>\n                <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n            </div>\n        );\n    };\n\n    export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}