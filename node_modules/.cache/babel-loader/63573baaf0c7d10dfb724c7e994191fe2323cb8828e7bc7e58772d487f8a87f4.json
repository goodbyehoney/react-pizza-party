{"ast":null,"code":"var _jsxFileName = \"/Users/halyna.marchukova/Desktop/react-pizza-party/src/pages/Home.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport qs from 'qs';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter, setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\nimport { useNavigate } from 'react-router-dom';\nimport { fetchPizzas } from '../redux/slices/pizzaSlice';\nimport { selectPizzaData } from '../redux/slices/pizzaSlice';\nimport Categories from '../components/Categories';\nimport Sort, { list } from '../components/Sort';\nimport PizzaBlock from '../components/PizzaBlock';\nimport Skeleton from '../components/PizzaBlock/Skeleton';\nimport Pagination from '../components/Pagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isSearch = React.useRef(false);\n  const isMounted = React.useRef(false);\n  const {\n    items,\n    status\n  } = useSelector(selectPizzaData);\n  const {\n    categoryId,\n    sort,\n    currentPage,\n    searchValue\n  } = useSelector(selectFilter);\n  const onClickCategory = id => {\n    dispatch(setCategoryId(id));\n  };\n  const onChangePage = page => {\n    dispatch(setCurrentPage(page));\n  };\n  const getPizzas = async () => {\n    const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n    const sortBy = sort.sortProperty.replace('-', '');\n    const category = categoryId > 0 ? `category=${categoryId}` : '';\n    const search = searchValue ? `&search=${searchValue}` : '';\n    dispatch(fetchPizzas({\n      order,\n      sortBy,\n      category,\n      search,\n      currentPage\n    }));\n  };\n  React.useEffect(() => {\n    if (window.location.search) {\n      const params = qs.parse(window.location.search.substring(1));\n      const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n      dispatch(setFilters({\n        ...params,\n        sort\n      }));\n      isSearch.current = true;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!isSearch.current) {\n      getPizzas();\n    }\n    isSearch.current = false;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  React.useEffect(() => {\n    if (isMounted.current) {\n      const queryString = qs.stringify({\n        sortProperty: sort.sortProperty,\n        categoryId,\n        currentPage\n      });\n      navigate(`?${queryString}`);\n    }\n    isMounted.current = true;\n  }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n  const pizzas = items.map(obj => /*#__PURE__*/_jsxDEV(PizzaBlock, {\n    ...obj\n  }, obj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 47\n  }, this));\n  const skeletons = [...new Array(6)].map((_, index) => /*#__PURE__*/_jsxDEV(Skeleton, {}, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 67\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__top\",\n      children: [/*#__PURE__*/_jsxDEV(Categories, {\n        value: categoryId,\n        onChangeCategory: onClickCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Sort, {\n        value: sort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"content__title\",\n      children: \"\\u0423\\u0441\\u0456 \\u043F\\u0456\\u0446\\u0446\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }, this), status === 'error' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content_error_info\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Ooops ... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content__items\",\n      children: [\" \", status === 'loading' ? skeletons : pizzas, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentPage: currentPage,\n      onChangePage: onChangePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n};\n_s(Home, \"Ooc3MW61PdoZaR0UxHbW3gBVyFE=\", false, function () {\n  return [useNavigate, useDispatch, useSelector, useSelector];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","qs","useSelector","useDispatch","selectFilter","setCategoryId","setCurrentPage","setFilters","useNavigate","fetchPizzas","selectPizzaData","Categories","Sort","list","PizzaBlock","Skeleton","Pagination","jsxDEV","_jsxDEV","Home","_s","navigate","dispatch","isSearch","useRef","isMounted","items","status","categoryId","sort","currentPage","searchValue","onClickCategory","id","onChangePage","page","getPizzas","order","sortProperty","includes","sortBy","replace","category","search","useEffect","window","location","params","parse","substring","find","obj","current","queryString","stringify","pizzas","map","fileName","_jsxFileName","lineNumber","columnNumber","skeletons","Array","_","index","className","children","value","onChangeCategory","_c","$RefreshReg$"],"sources":["/Users/halyna.marchukova/Desktop/react-pizza-party/src/pages/Home.jsx"],"sourcesContent":["    import React from 'react'\n    import qs from 'qs';\n    \n    import { useSelector, useDispatch } from 'react-redux';\n    import { selectFilter, setCategoryId, setCurrentPage, setFilters } from \"../redux/slices/filterSlice\";\n    import { useNavigate } from 'react-router-dom';\n    import { fetchPizzas } from '../redux/slices/pizzaSlice';\n    import { selectPizzaData } from '../redux/slices/pizzaSlice';\n\n    import Categories from '../components/Categories';\n    import Sort, { list } from '../components/Sort';\n    import PizzaBlock from '../components/PizzaBlock';\n    import Skeleton from '../components/PizzaBlock/Skeleton'\n    import Pagination from '../components/Pagination';\n    \n\n    const Home = () => {\n        const navigate = useNavigate();\n        const dispatch = useDispatch();\n        const isSearch = React.useRef(false);\n        const isMounted = React.useRef(false);\n\n        const {items, status} = useSelector(selectPizzaData);\n        const {categoryId, sort, currentPage, searchValue} = useSelector(selectFilter);\n\n        const onClickCategory = (id) => {\n            dispatch(setCategoryId(id));\n        };\n\n        const onChangePage = (page) => {\n            dispatch(setCurrentPage(page));\n        };\n\n        const getPizzas = async ()  => {\n        const order = sort.sortProperty.includes('-') ? 'asc' : 'desc';\n        const sortBy = sort.sortProperty.replace('-', '');\n        const category = categoryId > 0 ? `category=${categoryId}` : '';\n        const search = searchValue ? `&search=${searchValue}` : '';\n        \n        dispatch(\n            fetchPizzas({\n                        order,\n                        sortBy,\n                        category,\n                        search,\n                        currentPage,\n                    })\n                    );\n                };\n\n        React.useEffect(() => {\n            if (window.location.search) {\n                const params = qs.parse(window.location.search.substring(1));\n                const sort = list.find(obj => obj.sortProperty === params.sortProperty);\n\n                dispatch(\n                    setFilters({\n                        ...params,\n                        sort,\n                    }),\n                );\n                isSearch.current = true;\n            }\n        }, []);\n\n        React.useEffect(() => {\n            if (!isSearch.current) {\n                getPizzas();\n            }\n            isSearch.current = false;\n        }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n\n\n        React.useEffect(() => {\n                if (isMounted.current) {\n                    const queryString = qs.stringify({\n                        sortProperty: sort.sortProperty,\n                        categoryId,\n                        currentPage,\n                    });\n                    navigate(`?${queryString}`);\n                }\n                isMounted.current = true;\n            }, [categoryId, sort.sortProperty, searchValue, currentPage]);\n            const pizzas = items.map((obj) => <PizzaBlock key={obj.id} {...obj} />)\n            const skeletons = [... new Array(6)].map((_, index)=> <Skeleton key={index} />)\n        return (\n            <div className=\"container\">\n                <div className=\"content__top\">\n                    <Categories value={categoryId} onChangeCategory={onClickCategory}/>\n                    <Sort value={sort}/>\n                </div>\n                <h2 className=\"content__title\">Усі піцци</h2>\n                {\n                    status === 'error' ? (\n                        <div className=\"content_error_info\">\n                        <h2> Ooops ... </h2>\n                    </div> )\n                    : (<div className=\"content__items\"> {status === 'loading' ? skeletons : pizzas} </div>)\n                }\n                \n                <Pagination currentPage={currentPage} onChangePage={onChangePage} />\n            </div>\n        );\n    };\n\n    export default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}